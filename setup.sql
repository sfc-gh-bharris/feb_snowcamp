USE ROLE ACCOUNTADMIN;

/** IMPORTANT!!! 
 ** IMPORTANT!!! 
 ** IMPORTANT!!! 
 **
 ** Most commands use a create or replace. This means that databases will be dropped and any customizations you may have made will be lost
 **
 ** If this is not what you want, instead of CREATE OR REPLACE DATABASE consider CREATE DATABASE IF NOT EXISTS
 **
 **/

-- First things first, lets setup the things we need to complete the setup.

CREATE WAREHOUSE IF NOT EXISTS SETUP_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;
    
USE WAREHOUSE SETUP_WH;

-- Set up our DB, Schemas and stages

CREATE OR REPLACE DATABASE SETUP_DB;
CREATE OR REPLACE SCHEMA FILES;

USE DATABASE SETUP_DB;
USE SCHEMA FILES;

-- Stages for our files from Github
CREATE OR REPLACE STAGE SETUP_DB.FILES.NOTEBOOK_FILES
    DIRECTORY = (ENABLE = TRUE);

CREATE OR REPLACE STAGE SETUP_DB.FILES.STREAMLIT_FILES
    DIRECTORY = (ENABLE = TRUE);

CREATE OR REPLACE STAGE SETUP_DB.FILES.WORKSHEET_FILES
    DIRECTORY = (ENABLE = TRUE);

-- Create the integration with Github
CREATE OR REPLACE API INTEGRATION GITHUB_INTEGRATION_BHARRIS 
    api_provider = git_https_api 
    api_allowed_prefixes = ('https://github.com/sfc-gh-bharris') 
    enabled = TRUE 
    COMMENT='Brads repository containing all of our code.';

-- Create the integration with the Github repository

CREATE OR REPLACE GIT REPOSITORY SNOWCAMP_REPO 
    ORIGIN = 'https://github.com/sfc-gh-bharris/feb_snowcamp' 
    API_INTEGRATION = 'GITHUB_INTEGRATION_BHARRIS' 
    COMMENT = 'Brads repository containing all of our code.';

-- Fetch most recent files from Github repository
ALTER GIT REPOSITORY SNOWCAMP_REPO FETCH;

-- We can see what we've got.
-- ls @SNOWCAMP_REPO/branches/main/;

-- copy notebook files from github to internal stage
COPY files INTO @SETUP_DB.FILES.NOTEBOOK_FILES/
    FROM @SNOWCAMP_REPO/branches/main/notebooks/;

-- check them out
-- ls @NOTEBOOK_FILES;

-- copy streamlit from github to internal stage
COPY files INTO @SETUP_DB.FILES.STREAMLIT_FILES/
    FROM @SNOWCAMP_REPO/branches/main/streamlit/;

-- check them out
-- ls @STREAMLIT_FILES;

-- copy streamlit from github to internal stage
COPY files INTO @SETUP_DB.FILES.WORKSHEET_FILES/
    FROM @SNOWCAMP_REPO/branches/main/worksheets/;

-- check them out
-- ls @WORKSHEET_FILES;

-- At this point, we have all of our files moved to stages in Snowflake from GIT.
-- Now we're going to go through each session, create our databases, schemas, warehouses, etc and then load the notebooks, streamlit apps and worksheets.

-- SNOWFLAKE DATA ENGINEERING  --

-- Make sure we have the share.
CREATE DATABASE IF NOT EXISTS SNOWFLAKE_SAMPLE_DATA
    FROM SHARE SFC_SAMPLES.SAMPLE_DATA;

-- Grant the PUBLIC role access to the database.
-- Optionally change the role name to restrict access to a subset of users.
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE_SAMPLE_DATA TO ROLE PUBLIC;


CREATE OR REPLACE DATABASE SNOW_PANDAS_DE_QS;
CREATE SCHEMA IF NOT EXISTS SNOW_PANDAS_DE_QS.NOTEBOOKS;
CREATE SCHEMA IF NOT EXISTS SNOW_PANDAS_DE_QS.DATA;

CREATE WAREHOUSE IF NOT EXISTS SNOW_PANDAS_DE_QS_WH 
    WAREHOUSE_SIZE = 'XSMALL' 
    AUTO_SUSPEND = 60 
    INITIALLY_SUSPENDED = TRUE;

CREATE OR REPLACE DATABASE SNOW_DYNAMIC_TABLES_DE;
CREATE SCHEMA IF NOT EXISTS SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS;
CREATE SCHEMA IF NOT EXISTS SNOW_DYNAMIC_TABLES_DE.DATA;

CREATE WAREHOUSE IF NOT EXISTS SNOW_DYNAMIC_TABLES_DE_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

-- Now we create our notebooks.
-- Keep everything separated and situated in a format that makes sense, 
-- I'm going to create a stage and copy specific files to this stage, then create our notebooks

CREATE OR REPLACE STAGE SNOW_PANDAS_DE_QS.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

CREATE OR REPLACE STAGE SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- ls @SETUP_DB.FILES.NOTEBOOK_FILES;
-- ls @SNOW_PANDAS_DE_QS.NOTEBOOKS.FILES;
-- ls @SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.FILES;

-- Now we're going to copy over the files we want
COPY files INTO @SNOW_PANDAS_DE_QS.NOTEBOOKS.FILES/DATA_ENGINEERING_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_ENGINEERING_1_NOTEBOOK.ipynb');

COPY files INTO @SNOW_PANDAS_DE_QS.NOTEBOOKS.FILES/DATA_ENGINEERING_2_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_ENGINEERING_2_NOTEBOOK.ipynb');

COPY files INTO @SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.FILES/DATA_ENGINEERING_3_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_ENGINEERING_3_NOTEBOOK.ipynb');

COPY files INTO @SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.FILES/DATA_ENGINEERING_4_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_ENGINEERING_4_NOTEBOOK.ipynb');

-- And now we create our notebooks

CREATE OR REPLACE NOTEBOOK SNOW_PANDAS_DE_QS.NOTEBOOKS.DATA_ENGINEERING_1_NOTEBOOK
    FROM '@SNOW_PANDAS_DE_QS.NOTEBOOKS.FILES/DATA_ENGINEERING_1_NOTEBOOK' 
    MAIN_FILE = 'DATA_ENGINEERING_1_NOTEBOOK.ipynb' 
    QUERY_WAREHOUSE = 'SNOW_PANDAS_DE_QS_WH';


CREATE OR REPLACE NOTEBOOK SNOW_PANDAS_DE_QS.NOTEBOOKS.DATA_ENGINEERING_2_NOTEBOOK
    FROM '@SNOW_PANDAS_DE_QS.NOTEBOOKS.FILES/DATA_ENGINEERING_2_NOTEBOOK' 
    MAIN_FILE = 'DATA_ENGINEERING_2_NOTEBOOK.ipynb' 
    QUERY_WAREHOUSE = 'SNOW_PANDAS_DE_QS_WH';


CREATE OR REPLACE NOTEBOOK SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.DATA_ENGINEERING_3_NOTEBOOK
    FROM '@SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.FILES/DATA_ENGINEERING_3_NOTEBOOK' 
    MAIN_FILE = 'DATA_ENGINEERING_3_NOTEBOOK.ipynb' 
    QUERY_WAREHOUSE = 'SNOW_DYNAMIC_TABLES_DE_WH';


CREATE OR REPLACE NOTEBOOK SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.DATA_ENGINEERING_4_NOTEBOOK
    FROM '@SNOW_DYNAMIC_TABLES_DE.NOTEBOOKS.FILES/DATA_ENGINEERING_4_NOTEBOOK' 
    MAIN_FILE = 'DATA_ENGINEERING_4_NOTEBOOK.ipynb' 
    QUERY_WAREHOUSE = 'SNOW_DYNAMIC_TABLES_DE_WH';

-- END --

-- SNOWFLAKE DATA INGESTION EXAMPLE  --

CREATE OR REPLACE DATABASE SNOW_INGESTION_DE;

CREATE SCHEMA IF NOT EXISTS SNOW_INGESTION_DE.NOTEBOOKS;
CREATE SCHEMA IF NOT EXISTS SNOW_INGESTION_DE.DATA;


CREATE WAREHOUSE IF NOT EXISTS 
    SNOW_INGESTION_WH WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;


CREATE OR REPLACE STAGE SNOW_INGESTION_DE.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- Now we're going to copy over the files we want
COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_1_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_2_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_2_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_3_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_3_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_4_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_4_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_5_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_5_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_6_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_6_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_7_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_7_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_8_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_8_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_9_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_9_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_10_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_10_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_11_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_11_NOTEBOOK.ipynb');

COPY files INTO @SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_12_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DATA_INGESTION_12_NOTEBOOK.ipynb');

-- And now we create our notebooks

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_1_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_1_NOTEBOOK/' MAIN_FILE = 'DATA_INGESTION_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_2_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_2_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_2_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_3_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_3_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_3_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_4_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_4_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_4_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_5_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_5_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_5_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_6_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_6_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_6_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_7_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_7_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_7_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_8_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_8_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_8_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_9_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_9_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_9_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_10_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_10_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_10_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_11_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_11_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_11_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

CREATE OR REPLACE NOTEBOOK SNOW_INGESTION_DE.NOTEBOOKS.DATA_INGESTION_12_NOTEBOOK
    FROM '@SNOW_INGESTION_DE.NOTEBOOKS.FILES/DATA_INGESTION_12_NOTEBOOK' MAIN_FILE = 'DATA_INGESTION_12_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_INGESTION_WH';

-- WEBHOOKS EXAMPLE --

CREATE OR REPLACE DATABASE SNOW_WEBHOOKS;
CREATE SCHEMA IF NOT EXISTS SNOW_WEBHOOKS.NOTEBOOKS;
CREATE SCHEMA IF NOT EXISTS SNOW_WEBHOOKS.DATA;

CREATE WAREHOUSE IF NOT EXISTS SNOW_WEBHOOKS_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

CREATE OR REPLACE STAGE SNOW_WEBHOOKS.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- Now we're going to copy over the files we want
COPY files INTO @SNOW_WEBHOOKS.NOTEBOOKS.FILES/WEBHOOKS_1_NOTEBOOK/
FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('WEBHOOKS_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK SNOW_WEBHOOKS.NOTEBOOKS.WEBHOOKS_1_NOTEBOOK
FROM '@SNOW_WEBHOOKS.NOTEBOOKS.FILES/WEBHOOKS_1_NOTEBOOK' MAIN_FILE = 'WEBHOOKS_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'SNOW_WEBHOOKS_WH';

-- Now we're going to copy over the files we want
COPY files INTO @SNOW_WEBHOOKS.NOTEBOOKS.FILES/TRAIL_1_NOTEBOOK_V2/
FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('TRAIL_1_NOTEBOOK_V2.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK SNOW_WEBHOOKS.NOTEBOOKS.TRAIL_1_NOTEBOOK_V2
FROM '@SNOW_WEBHOOKS.NOTEBOOKS.FILES/TRAIL_1_NOTEBOOK_V2' MAIN_FILE = 'TRAIL_1_NOTEBOOK_V2.ipynb' QUERY_WAREHOUSE = 'SNOW_WEBHOOKS_WH';

-- END --

 -- PII EXAMPLE --

CREATE OR REPLACE DATABASE PII_EXAMPLE;
CREATE OR REPLACE SCHEMA PII_EXAMPLE.NOTEBOOKS;
CREATE OR REPLACE SCHEMA PII_EXAMPLE.DATA;

CREATE WAREHOUSE IF NOT EXISTS PII_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

CREATE OR REPLACE STAGE PII_EXAMPLE.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- Now we're going to copy over the files we want
COPY files INTO @PII_EXAMPLE.NOTEBOOKS.FILES/PII_SECURITY_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('PII_SECURITY_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK PII_EXAMPLE.NOTEBOOKS.PII_SECURITY_1_NOTEBOOK
    FROM '@PII_EXAMPLE.NOTEBOOKS.FILES/PII_SECURITY_1_NOTEBOOK' MAIN_FILE = 'PII_SECURITY_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'PII_WH';

-- END --


 -- FRAUD DETECTION SETUP --

CREATE OR REPLACE DATABASE CC_FINS_DB;
CREATE OR REPLACE SCHEMA ANALYTICS;
CREATE OR REPLACE SCHEMA NOTEBOOKS;

CREATE WAREHOUSE IF NOT EXISTS CC_FINS_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;


CREATE OR REPLACE STAGE CC_FINS_DB.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

CREATE OR REPLACE STAGE CC_FINS_DB.NOTEBOOKS.STREAMLIT_FILES
    DIRECTORY = (ENABLE = TRUE);    

-- Now we're going to copy over the files we want
COPY files INTO @CC_FINS_DB.NOTEBOOKS.FILES/FRAUD_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('FRAUD_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK CC_FINS_DB.NOTEBOOKS.FRAUD_1_NOTEBOOK
    FROM '@CC_FINS_DB.NOTEBOOKS.FILES/FRAUD_1_NOTEBOOK' MAIN_FILE = 'FRAUD_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'CC_FINS_WH';

-- Now we're going to copy over the files we want
COPY files INTO @CC_FINS_DB.NOTEBOOKS.FILES/FRAUD_2_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('FRAUD_2_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK CC_FINS_DB.NOTEBOOKS.FRAUD_2_NOTEBOOK
    FROM '@CC_FINS_DB.NOTEBOOKS.FILES/FRAUD_2_NOTEBOOK' MAIN_FILE = 'FRAUD_2_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'CC_FINS_WH';

-- Now we're going to copy over the files we want
COPY files INTO @CC_FINS_DB.NOTEBOOKS.STREAMLIT_FILES/FRAUD_1_STREAMLIT/
    FROM @SETUP_DB.FILES.STREAMLIT_FILES FILES = ('FRAUD_1_STREAMLIT.py');

-- And streamlit for this one
CREATE OR REPLACE STREAMLIT CC_FINS_DB.NOTEBOOKS.FRAUD_1_STREAMLIT 
    ROOT_LOCATION = '@CC_FINS_DB.NOTEBOOKS.STREAMLIT_FILES/FRAUD_1_STREAMLIT/' 
    MAIN_FILE = 'FRAUD_1_STREAMLIT.py' 
    QUERY_WAREHOUSE = 'CC_FINS_WH';
    
-- END --

-- RAG CHATBOT SETUP --

CREATE OR REPLACE DATABASE RAG_CHAT;
CREATE OR REPLACE SCHEMA DATA;
CREATE OR REPLACE SCHEMA NOTEBOOKS;

CREATE WAREHOUSE IF NOT EXISTS RAG_CHAT_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

CREATE OR REPLACE STAGE RAG_CHAT.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

CREATE OR REPLACE STAGE RAG_CHAT.NOTEBOOKS.STREAMLIT_FILES
    DIRECTORY = (ENABLE = TRUE);
    
-- Now we're going to copy over the files we want
COPY files INTO @RAG_CHAT.NOTEBOOKS.FILES/RAG_CHAT_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('RAG_CHAT_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK RAG_CHAT.NOTEBOOKS.RAG_CHAT_1_NOTEBOOK
    FROM '@RAG_CHAT.NOTEBOOKS.FILES/RAG_CHAT_1_NOTEBOOK' MAIN_FILE = 'RAG_CHAT_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'RAG_CHAT_WH';

-- Now we're going to copy over the files we want
COPY files INTO @RAG_CHAT.NOTEBOOKS.FILES/LLM_FINE_TUNING_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('LLM_FINE_TUNING_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK RAG_CHAT.NOTEBOOKS.LLM_FINE_TUNING_1_NOTEBOOK
    FROM '@RAG_CHAT.NOTEBOOKS.FILES/LLM_FINE_TUNING_1_NOTEBOOK' MAIN_FILE = 'LLM_FINE_TUNING_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'RAG_CHAT_WH';

-- Now we're going to copy over the files we want
COPY files INTO @RAG_CHAT.NOTEBOOKS.STREAMLIT_FILES/RAG_CHAT_1_STREAMLIT/
    FROM @SETUP_DB.FILES.STREAMLIT_FILES FILES = ('RAG_CHAT_1_STREAMLIT.py');

-- And streamlit for this one
CREATE OR REPLACE STREAMLIT RAG_CHAT.NOTEBOOKS.RAG_CHAT_1_STREAMLIT 
    ROOT_LOCATION = '@RAG_CHAT.NOTEBOOKS.STREAMLIT_FILES/RAG_CHAT_1_STREAMLIT/' 
    MAIN_FILE = 'RAG_CHAT_1_STREAMLIT.py' 
    QUERY_WAREHOUSE = 'RAG_CHAT_WH';

    
-- END --


 -- ML FUNCTIONS --
CREATE OR REPLACE DATABASE ML_FUNCTIONS;
CREATE OR REPLACE SCHEMA DATA;
CREATE OR REPLACE SCHEMA NOTEBOOKS;

CREATE WAREHOUSE IF NOT EXISTS ML_FUNCTIONS_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = MEDIUM 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

CREATE OR REPLACE STAGE ML_FUNCTIONS.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- Now we're going to copy over the files we want
COPY files INTO @ML_FUNCTIONS.NOTEBOOKS.FILES/ML_FUNCTIONS_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('ML_FUNCTIONS_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK ML_FUNCTIONS.NOTEBOOKS.ML_FUNCTIONS_1_NOTEBOOK
    FROM '@ML_FUNCTIONS.NOTEBOOKS.FILES/ML_FUNCTIONS_1_NOTEBOOK' MAIN_FILE = 'ML_FUNCTIONS_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'ML_FUNCTIONS_WH';

-- END --


-- PERFORMANCE OPTIMIZATION --

CREATE OR REPLACE DATABASE PERF;
CREATE OR REPLACE SCHEMA DATA;
CREATE OR REPLACE SCHEMA NOTEBOOKS;

CREATE WAREHOUSE IF NOT EXISTS PERF_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

CREATE OR REPLACE STAGE PERF.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- Now we're going to copy over the files we want
COPY files INTO @PERF.NOTEBOOKS.FILES/PERFORMANCE_OPTMIZATION_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('PERFORMANCE_OPTMIZATION_1_NOTEBOOK.ipynb');

-- And create our notebook
CREATE OR REPLACE NOTEBOOK PERF.NOTEBOOKS.PERFORMANCE_OPTMIZATION_1_NOTEBOOK
    FROM '@PERF.NOTEBOOKS.FILES/PERFORMANCE_OPTMIZATION_1_NOTEBOOK' MAIN_FILE = 'PERFORMANCE_OPTMIZATION_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'PERF_WH';

-- END --

-- DOCUMENTAI --

CREATE OR REPLACE DATABASE DOCAI;
CREATE OR REPLACE SCHEMA DATA;
CREATE OR REPLACE SCHEMA NOTEBOOKS;

CREATE WAREHOUSE IF NOT EXISTS DOCAI_WH 
    WAREHOUSE_TYPE = STANDARD 
    WAREHOUSE_SIZE = XSMALL 
    INITIALLY_SUSPENDED = TRUE 
    AUTO_SUSPEND = 60;

CREATE OR REPLACE STAGE DOCAI.NOTEBOOKS.FILES
    DIRECTORY = (ENABLE = TRUE);

-- Now we're going to copy over the files we want
COPY files INTO @DOCAI.NOTEBOOKS.FILES/DOCUMENT_AI_1_NOTEBOOK/
    FROM @SETUP_DB.FILES.NOTEBOOK_FILES FILES = ('DOCUMENT_AI_1_NOTEBOOK.ipynb');
   
-- And create our notebook
CREATE OR REPLACE NOTEBOOK DOCAI.NOTEBOOKS.DOCUMENT_AI_1_NOTEBOOK
    FROM '@DOCAI.NOTEBOOKS.FILES/DOCUMENT_AI_1_NOTEBOOK' MAIN_FILE = 'DOCUMENT_AI_1_NOTEBOOK.ipynb' QUERY_WAREHOUSE = 'DOCAI_WH';

--- END ---


-- create streamlit page

CREATE OR REPLACE STREAMLIT CC_FINS_DB.NOTEBOOKS.FRAUD_1_STREAMLIT ROOT_LOCATION = '@CC_FINS_DB.NOTEBOOKS.STREAMLIT_FILES' MAIN_FILE = '/FRAUD_1_STREAMLIT.py' QUERY_WAREHOUSE = 'CC_FINS_WH';

Select 'EVERYTHING IS DONE!';